version: 2.1

executors:
  node:
    docker:
      - image: circleci/node:12.16.1
  node_and_postgres:
    docker:
      - image: circleci/node:12.16.1
      - image: postgres:12.3
        environment:
          POSTGRES_DB: alxmedium-auth
          POSTGRES_PASSWORD: alxmedium-auth-service-password
          POSTGRES_USER: alxmedium-auth-service

commands:
  install_dependencies:
    description: 'Install Dependencies'
    steps:
      - restore_cache:
          keys:
            - auth-service-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: 'Install Dependencies'
          command: npm i
      - save_cache:
          key: auth-service-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths: ~/.cache

jobs:
  codacy:
    executor: node_and_postgres
    steps:
      - checkout
      - install_dependencies
      - run:
          name: 'Codacy'
          command: |
            npm run test:ci
            bash <(curl -Ls https://coverage.codacy.com/get.sh)

  codecov:
    executor: node_and_postgres
    steps:
      - checkout
      - install_dependencies
      - run:
          name: 'CodeCov'
          command: |
            npm run test:ci
            cp coverage/coverage-final.json coverage/coverage.json
            bash <(curl -s https://codecov.io/bash)

  generate_release:
    executor: node
    steps:
      - checkout
      - run:
          name: Generate Release
          command: |
            sudo npm i -g @semantic-release/changelog semantic-release
            semantic-release

  lint:
    executor: node
    steps:
      - checkout
      - install_dependencies
      - run:
          name: 'Run Linter'
          command: npm run lint

  test_integration:
    executor: node_and_postgres
    steps:
      - checkout
      - install_dependencies
      - run:
          name: 'Run Integration Tests'
          command: npm run test:ci:integration

  test_unit:
    executor: node
    steps:
      - checkout
      - install_dependencies
      - run:
          name: 'Run Unit Tests'
          command: npm run test:ci:unit

workflows:
  version: 2

  development:
    jobs:
      - lint:
          filters:
            branches:
              ignore: master
      - test_integration:
          filters:
            branches:
              ignore: master
          requires:
            - lint
      - test_unit:
          filters:
            branches:
              ignore: master
          requires:
            - lint
      - codecov:
          filters:
            branches:
              ignore: master
          requires:
            - test_integration
            - test_unit
      - codacy:
          filters:
            branches:
              ignore: master
          requires:
            - test_integration
            - test_unit

  production:
    jobs:
      - generate_release:
          filters:
            branches:
              only: master
